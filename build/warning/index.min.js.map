{"version":3,"file":"./build/warning/index.min.js","mappings":"mBACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,I,KC0BnE,SAASI,EAASC,GAuBjC,C,uBC3CsB,IAAIC,K","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","../../packages/warning/src/index.js","../../packages/warning/src/utils.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\r\n * Internal dependencies\r\n */\r\nimport { logged } from './utils';\r\n\r\nfunction isDev() {\r\n\treturn typeof SCRIPT_DEBUG !== 'undefined' && SCRIPT_DEBUG === true;\r\n}\r\n\r\n/**\r\n * Shows a warning with `message` if environment is not `production`.\r\n *\r\n * @param {string} message Message to show in the warning.\r\n *\r\n * @example\r\n * ```js\r\n * import warning from '@wordpress/warning';\r\n *\r\n * function MyComponent( props ) {\r\n *   if ( ! props.title ) {\r\n *     warning( '`props.title` was not passed' );\r\n *   }\r\n *   ...\r\n * }\r\n * ```\r\n */\r\nexport default function warning( message ) {\r\n\tif ( ! isDev() ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Skip if already logged.\r\n\tif ( logged.has( message ) ) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// eslint-disable-next-line no-console\r\n\tconsole.warn( message );\r\n\r\n\t// Throwing an error and catching it immediately to improve debugging\r\n\t// A consumer can use 'pause on caught exceptions'\r\n\t// https://github.com/facebook/react/issues/4216\r\n\ttry {\r\n\t\tthrow Error( message );\r\n\t} catch ( x ) {\r\n\t\t// Do nothing.\r\n\t}\r\n\r\n\tlogged.add( message );\r\n}\r\n","/**\r\n * Object map tracking messages which have been logged, for use in ensuring a\r\n * message is only logged once.\r\n *\r\n * @type {Set<string>}\r\n */\r\nexport const logged = new Set();\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","warning","message","Set"],"sourceRoot":""}