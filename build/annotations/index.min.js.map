{"version":3,"file":"./build/annotations/index.min.js","mappings":"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","sources":["webpack://wp/webpack/bootstrap","webpack://wp/webpack/runtime/define property getters","webpack://wp/webpack/runtime/hasOwnProperty shorthand","webpack://wp/webpack/runtime/make namespace object","webpack://wp/external window [\"wp\",\"richText\"]","webpack://wp/external window [\"wp\",\"i18n\"]","../../packages/annotations/src/store/constants.js","../../packages/annotations/src/format/annotation.js","../../packages/annotations/src/format/index.js","webpack://wp/external window [\"wp\",\"hooks\"]","webpack://wp/external window [\"wp\",\"data\"]","../../packages/annotations/src/store/reducer.js","../../packages/annotations/src/block/index.js","webpack://wp/./node_modules/rememo/rememo.js","../../packages/annotations/src/store/selectors.js","webpack://wp/./packages/annotations/node_modules/uuid/dist/esm-browser/rng.js","webpack://wp/./packages/annotations/node_modules/uuid/dist/esm-browser/regex.js","webpack://wp/./packages/annotations/node_modules/uuid/dist/esm-browser/stringify.js","webpack://wp/./packages/annotations/node_modules/uuid/dist/esm-browser/validate.js","webpack://wp/./packages/annotations/node_modules/uuid/dist/esm-browser/v4.js","../../packages/annotations/src/store/actions.js","../../packages/annotations/src/store/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"richText\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\r\n * The identifier for the data store.\r\n *\r\n * @type {string}\r\n */\r\nexport const STORE_NAME = 'core/annotations';\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { __ } from '@wordpress/i18n';\r\nimport { applyFormat, removeFormat } from '@wordpress/rich-text';\r\n\r\nconst FORMAT_NAME = 'core/annotation';\r\n\r\nconst ANNOTATION_ATTRIBUTE_PREFIX = 'annotation-text-';\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { STORE_NAME } from '../store/constants';\r\n\r\n/**\r\n * Applies given annotations to the given record.\r\n *\r\n * @param {Object} record      The record to apply annotations to.\r\n * @param {Array}  annotations The annotation to apply.\r\n * @return {Object} A record with the annotations applied.\r\n */\r\nexport function applyAnnotations( record, annotations = [] ) {\r\n\tannotations.forEach( ( annotation ) => {\r\n\t\tlet { start, end } = annotation;\r\n\r\n\t\tif ( start > record.text.length ) {\r\n\t\t\tstart = record.text.length;\r\n\t\t}\r\n\r\n\t\tif ( end > record.text.length ) {\r\n\t\t\tend = record.text.length;\r\n\t\t}\r\n\r\n\t\tconst className = ANNOTATION_ATTRIBUTE_PREFIX + annotation.source;\r\n\t\tconst id = ANNOTATION_ATTRIBUTE_PREFIX + annotation.id;\r\n\r\n\t\trecord = applyFormat(\r\n\t\t\trecord,\r\n\t\t\t{\r\n\t\t\t\ttype: FORMAT_NAME,\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t\tid,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tstart,\r\n\t\t\tend\r\n\t\t);\r\n\t} );\r\n\r\n\treturn record;\r\n}\r\n\r\n/**\r\n * Removes annotations from the given record.\r\n *\r\n * @param {Object} record Record to remove annotations from.\r\n * @return {Object} The cleaned record.\r\n */\r\nexport function removeAnnotations( record ) {\r\n\treturn removeFormat( record, 'core/annotation', 0, record.text.length );\r\n}\r\n\r\n/**\r\n * Retrieves the positions of annotations inside an array of formats.\r\n *\r\n * @param {Array} formats Formats with annotations in there.\r\n * @return {Object} ID keyed positions of annotations.\r\n */\r\nfunction retrieveAnnotationPositions( formats ) {\r\n\tconst positions = {};\r\n\r\n\tformats.forEach( ( characterFormats, i ) => {\r\n\t\tcharacterFormats = characterFormats || [];\r\n\t\tcharacterFormats = characterFormats.filter(\r\n\t\t\t( format ) => format.type === FORMAT_NAME\r\n\t\t);\r\n\t\tcharacterFormats.forEach( ( format ) => {\r\n\t\t\tlet { id } = format.attributes;\r\n\t\t\tid = id.replace( ANNOTATION_ATTRIBUTE_PREFIX, '' );\r\n\r\n\t\t\tif ( ! positions.hasOwnProperty( id ) ) {\r\n\t\t\t\tpositions[ id ] = {\r\n\t\t\t\t\tstart: i,\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// Annotations refer to positions between characters.\r\n\t\t\t// Formats refer to the character themselves.\r\n\t\t\t// So we need to adjust for that here.\r\n\t\t\tpositions[ id ].end = i + 1;\r\n\t\t} );\r\n\t} );\r\n\r\n\treturn positions;\r\n}\r\n\r\n/**\r\n * Updates annotations in the state based on positions retrieved from RichText.\r\n *\r\n * @param {Array}    annotations                   The annotations that are currently applied.\r\n * @param {Array}    positions                     The current positions of the given annotations.\r\n * @param {Object}   actions\r\n * @param {Function} actions.removeAnnotation      Function to remove an annotation from the state.\r\n * @param {Function} actions.updateAnnotationRange Function to update an annotation range in the state.\r\n */\r\nfunction updateAnnotationsWithPositions(\r\n\tannotations,\r\n\tpositions,\r\n\t{ removeAnnotation, updateAnnotationRange }\r\n) {\r\n\tannotations.forEach( ( currentAnnotation ) => {\r\n\t\tconst position = positions[ currentAnnotation.id ];\r\n\t\t// If we cannot find an annotation, delete it.\r\n\t\tif ( ! position ) {\r\n\t\t\t// Apparently the annotation has been removed, so remove it from the state:\r\n\t\t\t// Remove...\r\n\t\t\tremoveAnnotation( currentAnnotation.id );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { start, end } = currentAnnotation;\r\n\t\tif ( start !== position.start || end !== position.end ) {\r\n\t\t\tupdateAnnotationRange(\r\n\t\t\t\tcurrentAnnotation.id,\r\n\t\t\t\tposition.start,\r\n\t\t\t\tposition.end\r\n\t\t\t);\r\n\t\t}\r\n\t} );\r\n}\r\n\r\nexport const annotation = {\r\n\tname: FORMAT_NAME,\r\n\ttitle: __( 'Annotation' ),\r\n\ttagName: 'mark',\r\n\tclassName: 'annotation-text',\r\n\tattributes: {\r\n\t\tclassName: 'class',\r\n\t\tid: 'id',\r\n\t},\r\n\tedit() {\r\n\t\treturn null;\r\n\t},\r\n\t__experimentalGetPropsForEditableTreePreparation(\r\n\t\tselect,\r\n\t\t{ richTextIdentifier, blockClientId }\r\n\t) {\r\n\t\treturn {\r\n\t\t\tannotations: select(\r\n\t\t\t\tSTORE_NAME\r\n\t\t\t).__experimentalGetAnnotationsForRichText(\r\n\t\t\t\tblockClientId,\r\n\t\t\t\trichTextIdentifier\r\n\t\t\t),\r\n\t\t};\r\n\t},\r\n\t__experimentalCreatePrepareEditableTree( { annotations } ) {\r\n\t\treturn ( formats, text ) => {\r\n\t\t\tif ( annotations.length === 0 ) {\r\n\t\t\t\treturn formats;\r\n\t\t\t}\r\n\r\n\t\t\tlet record = { formats, text };\r\n\t\t\trecord = applyAnnotations( record, annotations );\r\n\t\t\treturn record.formats;\r\n\t\t};\r\n\t},\r\n\t__experimentalGetPropsForEditableTreeChangeHandler( dispatch ) {\r\n\t\treturn {\r\n\t\t\tremoveAnnotation:\r\n\t\t\t\tdispatch( STORE_NAME ).__experimentalRemoveAnnotation,\r\n\t\t\tupdateAnnotationRange:\r\n\t\t\t\tdispatch( STORE_NAME ).__experimentalUpdateAnnotationRange,\r\n\t\t};\r\n\t},\r\n\t__experimentalCreateOnChangeEditableValue( props ) {\r\n\t\treturn ( formats ) => {\r\n\t\t\tconst positions = retrieveAnnotationPositions( formats );\r\n\t\t\tconst { removeAnnotation, updateAnnotationRange, annotations } =\r\n\t\t\t\tprops;\r\n\r\n\t\t\tupdateAnnotationsWithPositions( annotations, positions, {\r\n\t\t\t\tremoveAnnotation,\r\n\t\t\t\tupdateAnnotationRange,\r\n\t\t\t} );\r\n\t\t};\r\n\t},\r\n};\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { registerFormatType } from '@wordpress/rich-text';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { annotation } from './annotation';\r\n\r\nconst { name, ...settings } = annotation;\r\n\r\nregisterFormatType( name, settings );\r\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"hooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","/**\r\n * Filters an array based on the predicate, but keeps the reference the same if\r\n * the array hasn't changed.\r\n *\r\n * @param {Array}    collection The collection to filter.\r\n * @param {Function} predicate  Function that determines if the item should stay\r\n *                              in the array.\r\n * @return {Array} Filtered array.\r\n */\r\nfunction filterWithReference( collection, predicate ) {\r\n\tconst filteredCollection = collection.filter( predicate );\r\n\r\n\treturn collection.length === filteredCollection.length\r\n\t\t? collection\r\n\t\t: filteredCollection;\r\n}\r\n\r\n/**\r\n * Creates a new object with the same keys, but with `callback()` called as\r\n * a transformer function on each of the values.\r\n *\r\n * @param {Object}   obj      The object to transform.\r\n * @param {Function} callback The function to transform each object value.\r\n * @return {Array} Transformed object.\r\n */\r\nconst mapValues = ( obj, callback ) =>\r\n\tObject.entries( obj ).reduce(\r\n\t\t( acc, [ key, value ] ) => ( {\r\n\t\t\t...acc,\r\n\t\t\t[ key ]: callback( value ),\r\n\t\t} ),\r\n\t\t{}\r\n\t);\r\n\r\n/**\r\n * Verifies whether the given annotations is a valid annotation.\r\n *\r\n * @param {Object} annotation The annotation to verify.\r\n * @return {boolean} Whether the given annotation is valid.\r\n */\r\nfunction isValidAnnotationRange( annotation ) {\r\n\treturn (\r\n\t\ttypeof annotation.start === 'number' &&\r\n\t\ttypeof annotation.end === 'number' &&\r\n\t\tannotation.start <= annotation.end\r\n\t);\r\n}\r\n\r\n/**\r\n * Reducer managing annotations.\r\n *\r\n * @param {Object} state  The annotations currently shown in the editor.\r\n * @param {Object} action Dispatched action.\r\n *\r\n * @return {Array} Updated state.\r\n */\r\nexport function annotations( state = {}, action ) {\r\n\tswitch ( action.type ) {\r\n\t\tcase 'ANNOTATION_ADD':\r\n\t\t\tconst blockClientId = action.blockClientId;\r\n\t\t\tconst newAnnotation = {\r\n\t\t\t\tid: action.id,\r\n\t\t\t\tblockClientId,\r\n\t\t\t\trichTextIdentifier: action.richTextIdentifier,\r\n\t\t\t\tsource: action.source,\r\n\t\t\t\tselector: action.selector,\r\n\t\t\t\trange: action.range,\r\n\t\t\t};\r\n\r\n\t\t\tif (\r\n\t\t\t\tnewAnnotation.selector === 'range' &&\r\n\t\t\t\t! isValidAnnotationRange( newAnnotation.range )\r\n\t\t\t) {\r\n\t\t\t\treturn state;\r\n\t\t\t}\r\n\r\n\t\t\tconst previousAnnotationsForBlock = state?.[ blockClientId ] ?? [];\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\t[ blockClientId ]: [\r\n\t\t\t\t\t...previousAnnotationsForBlock,\r\n\t\t\t\t\tnewAnnotation,\r\n\t\t\t\t],\r\n\t\t\t};\r\n\r\n\t\tcase 'ANNOTATION_REMOVE':\r\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\r\n\t\t\t\treturn filterWithReference(\r\n\t\t\t\t\tannotationsForBlock,\r\n\t\t\t\t\t( annotation ) => {\r\n\t\t\t\t\t\treturn annotation.id !== action.annotationId;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\r\n\t\tcase 'ANNOTATION_UPDATE_RANGE':\r\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\r\n\t\t\t\tlet hasChangedRange = false;\r\n\r\n\t\t\t\tconst newAnnotations = annotationsForBlock.map(\r\n\t\t\t\t\t( annotation ) => {\r\n\t\t\t\t\t\tif ( annotation.id === action.annotationId ) {\r\n\t\t\t\t\t\t\thasChangedRange = true;\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t...annotation,\r\n\t\t\t\t\t\t\t\trange: {\r\n\t\t\t\t\t\t\t\t\tstart: action.start,\r\n\t\t\t\t\t\t\t\t\tend: action.end,\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn annotation;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\r\n\t\t\t\treturn hasChangedRange ? newAnnotations : annotationsForBlock;\r\n\t\t\t} );\r\n\r\n\t\tcase 'ANNOTATION_REMOVE_SOURCE':\r\n\t\t\treturn mapValues( state, ( annotationsForBlock ) => {\r\n\t\t\t\treturn filterWithReference(\r\n\t\t\t\t\tannotationsForBlock,\r\n\t\t\t\t\t( annotation ) => {\r\n\t\t\t\t\t\treturn annotation.source !== action.source;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} );\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n\r\nexport default annotations;\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { addFilter } from '@wordpress/hooks';\r\nimport { withSelect } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { STORE_NAME } from '../store/constants';\r\n/**\r\n * Adds annotation className to the block-list-block component.\r\n *\r\n * @param {Object} OriginalComponent The original BlockListBlock component.\r\n * @return {Object} The enhanced component.\r\n */\r\nconst addAnnotationClassName = ( OriginalComponent ) => {\r\n\treturn withSelect( ( select, { clientId, className } ) => {\r\n\t\tconst annotations =\r\n\t\t\tselect( STORE_NAME ).__experimentalGetAnnotationsForBlock(\r\n\t\t\t\tclientId\r\n\t\t\t);\r\n\r\n\t\treturn {\r\n\t\t\tclassName: annotations\r\n\t\t\t\t.map( ( annotation ) => {\r\n\t\t\t\t\treturn 'is-annotated-by-' + annotation.source;\r\n\t\t\t\t} )\r\n\t\t\t\t.concat( className )\r\n\t\t\t\t.filter( Boolean )\r\n\t\t\t\t.join( ' ' ),\r\n\t\t};\r\n\t} )( OriginalComponent );\r\n};\r\n\r\naddFilter(\r\n\t'editor.BlockListBlock',\r\n\t'core/annotations',\r\n\taddAnnotationClassName\r\n);\r\n","'use strict';\n\n/** @typedef {(...args: any[]) => *[]} GetDependants */\n\n/** @typedef {() => void} Clear */\n\n/**\n * @typedef {{\n *   getDependants: GetDependants,\n *   clear: Clear\n * }} EnhancedSelector\n */\n\n/**\n * Internal cache entry.\n *\n * @typedef CacheNode\n *\n * @property {?CacheNode|undefined} [prev] Previous node.\n * @property {?CacheNode|undefined} [next] Next node.\n * @property {*[]} args Function arguments for cache entry.\n * @property {*} val Function result.\n */\n\n/**\n * @typedef Cache\n *\n * @property {Clear} clear Function to clear cache.\n * @property {boolean} [isUniqueByDependants] Whether dependants are valid in\n * considering cache uniqueness. A cache is unique if dependents are all arrays\n * or objects.\n * @property {CacheNode?} [head] Cache head.\n * @property {*[]} [lastDependants] Dependants from previous invocation.\n */\n\n/**\n * Arbitrary value used as key for referencing cache object in WeakMap tree.\n *\n * @type {{}}\n */\nvar LEAF_KEY = {};\n\n/**\n * Returns the first argument as the sole entry in an array.\n *\n * @template T\n *\n * @param {T} value Value to return.\n *\n * @return {[T]} Value returned as entry in array.\n */\nfunction arrayOf(value) {\n\treturn [value];\n}\n\n/**\n * Returns true if the value passed is object-like, or false otherwise. A value\n * is object-like if it can support property assignment, e.g. object or array.\n *\n * @param {*} value Value to test.\n *\n * @return {boolean} Whether value is object-like.\n */\nfunction isObjectLike(value) {\n\treturn !!value && 'object' === typeof value;\n}\n\n/**\n * Creates and returns a new cache object.\n *\n * @return {Cache} Cache object.\n */\nfunction createCache() {\n\t/** @type {Cache} */\n\tvar cache = {\n\t\tclear: function () {\n\t\t\tcache.head = null;\n\t\t},\n\t};\n\n\treturn cache;\n}\n\n/**\n * Returns true if entries within the two arrays are strictly equal by\n * reference from a starting index.\n *\n * @param {*[]} a First array.\n * @param {*[]} b Second array.\n * @param {number} fromIndex Index from which to start comparison.\n *\n * @return {boolean} Whether arrays are shallowly equal.\n */\nfunction isShallowEqual(a, b, fromIndex) {\n\tvar i;\n\n\tif (a.length !== b.length) {\n\t\treturn false;\n\t}\n\n\tfor (i = fromIndex; i < a.length; i++) {\n\t\tif (a[i] !== b[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Returns a memoized selector function. The getDependants function argument is\n * called before the memoized selector and is expected to return an immutable\n * reference or array of references on which the selector depends for computing\n * its own return value. The memoize cache is preserved only as long as those\n * dependant references remain the same. If getDependants returns a different\n * reference(s), the cache is cleared and the selector value regenerated.\n *\n * @template {(...args: *[]) => *} S\n *\n * @param {S} selector Selector function.\n * @param {GetDependants=} getDependants Dependant getter returning an array of\n * references used in cache bust consideration.\n */\nexport default function (selector, getDependants) {\n\t/** @type {WeakMap<*,*>} */\n\tvar rootCache;\n\n\t/** @type {GetDependants} */\n\tvar normalizedGetDependants = getDependants ? getDependants : arrayOf;\n\n\t/**\n\t * Returns the cache for a given dependants array. When possible, a WeakMap\n\t * will be used to create a unique cache for each set of dependants. This\n\t * is feasible due to the nature of WeakMap in allowing garbage collection\n\t * to occur on entries where the key object is no longer referenced. Since\n\t * WeakMap requires the key to be an object, this is only possible when the\n\t * dependant is object-like. The root cache is created as a hierarchy where\n\t * each top-level key is the first entry in a dependants set, the value a\n\t * WeakMap where each key is the next dependant, and so on. This continues\n\t * so long as the dependants are object-like. If no dependants are object-\n\t * like, then the cache is shared across all invocations.\n\t *\n\t * @see isObjectLike\n\t *\n\t * @param {*[]} dependants Selector dependants.\n\t *\n\t * @return {Cache} Cache object.\n\t */\n\tfunction getCache(dependants) {\n\t\tvar caches = rootCache,\n\t\t\tisUniqueByDependants = true,\n\t\t\ti,\n\t\t\tdependant,\n\t\t\tmap,\n\t\t\tcache;\n\n\t\tfor (i = 0; i < dependants.length; i++) {\n\t\t\tdependant = dependants[i];\n\n\t\t\t// Can only compose WeakMap from object-like key.\n\t\t\tif (!isObjectLike(dependant)) {\n\t\t\t\tisUniqueByDependants = false;\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Does current segment of cache already have a WeakMap?\n\t\t\tif (caches.has(dependant)) {\n\t\t\t\t// Traverse into nested WeakMap.\n\t\t\t\tcaches = caches.get(dependant);\n\t\t\t} else {\n\t\t\t\t// Create, set, and traverse into a new one.\n\t\t\t\tmap = new WeakMap();\n\t\t\t\tcaches.set(dependant, map);\n\t\t\t\tcaches = map;\n\t\t\t}\n\t\t}\n\n\t\t// We use an arbitrary (but consistent) object as key for the last item\n\t\t// in the WeakMap to serve as our running cache.\n\t\tif (!caches.has(LEAF_KEY)) {\n\t\t\tcache = createCache();\n\t\t\tcache.isUniqueByDependants = isUniqueByDependants;\n\t\t\tcaches.set(LEAF_KEY, cache);\n\t\t}\n\n\t\treturn caches.get(LEAF_KEY);\n\t}\n\n\t/**\n\t * Resets root memoization cache.\n\t */\n\tfunction clear() {\n\t\trootCache = new WeakMap();\n\t}\n\n\t/* eslint-disable jsdoc/check-param-names */\n\t/**\n\t * The augmented selector call, considering first whether dependants have\n\t * changed before passing it to underlying memoize function.\n\t *\n\t * @param {*}    source    Source object for derivation.\n\t * @param {...*} extraArgs Additional arguments to pass to selector.\n\t *\n\t * @return {*} Selector result.\n\t */\n\t/* eslint-enable jsdoc/check-param-names */\n\tfunction callSelector(/* source, ...extraArgs */) {\n\t\tvar len = arguments.length,\n\t\t\tcache,\n\t\t\tnode,\n\t\t\ti,\n\t\t\targs,\n\t\t\tdependants;\n\n\t\t// Create copy of arguments (avoid leaking deoptimization).\n\t\targs = new Array(len);\n\t\tfor (i = 0; i < len; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\n\t\tdependants = normalizedGetDependants.apply(null, args);\n\t\tcache = getCache(dependants);\n\n\t\t// If not guaranteed uniqueness by dependants (primitive type), shallow\n\t\t// compare against last dependants and, if references have changed,\n\t\t// destroy cache to recalculate result.\n\t\tif (!cache.isUniqueByDependants) {\n\t\t\tif (\n\t\t\t\tcache.lastDependants &&\n\t\t\t\t!isShallowEqual(dependants, cache.lastDependants, 0)\n\t\t\t) {\n\t\t\t\tcache.clear();\n\t\t\t}\n\n\t\t\tcache.lastDependants = dependants;\n\t\t}\n\n\t\tnode = cache.head;\n\t\twhile (node) {\n\t\t\t// Check whether node arguments match arguments\n\t\t\tif (!isShallowEqual(node.args, args, 1)) {\n\t\t\t\tnode = node.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// At this point we can assume we've found a match\n\n\t\t\t// Surface matched node to head if not already\n\t\t\tif (node !== cache.head) {\n\t\t\t\t// Adjust siblings to point to each other.\n\t\t\t\t/** @type {CacheNode} */ (node.prev).next = node.next;\n\t\t\t\tif (node.next) {\n\t\t\t\t\tnode.next.prev = node.prev;\n\t\t\t\t}\n\n\t\t\t\tnode.next = cache.head;\n\t\t\t\tnode.prev = null;\n\t\t\t\t/** @type {CacheNode} */ (cache.head).prev = node;\n\t\t\t\tcache.head = node;\n\t\t\t}\n\n\t\t\t// Return immediately\n\t\t\treturn node.val;\n\t\t}\n\n\t\t// No cached value found. Continue to insertion phase:\n\n\t\tnode = /** @type {CacheNode} */ ({\n\t\t\t// Generate the result from original function\n\t\t\tval: selector.apply(null, args),\n\t\t});\n\n\t\t// Avoid including the source object in the cache.\n\t\targs[0] = null;\n\t\tnode.args = args;\n\n\t\t// Don't need to check whether node is already head, since it would\n\t\t// have been returned above already if it was\n\n\t\t// Shift existing head down list\n\t\tif (cache.head) {\n\t\t\tcache.head.prev = node;\n\t\t\tnode.next = cache.head;\n\t\t}\n\n\t\tcache.head = node;\n\n\t\treturn node.val;\n\t}\n\n\tcallSelector.getDependants = normalizedGetDependants;\n\tcallSelector.clear = clear;\n\tclear();\n\n\treturn /** @type {S & EnhancedSelector} */ (callSelector);\n}\n","/**\n * External dependencies\n */\nimport createSelector from 'rememo';\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation, as in a connected or\n * other pure component which performs `shouldComponentUpdate` check on props.\n * This should be used as a last resort, since the normalized data should be\n * maintained by the reducer result in state.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\n/**\n * Returns the annotations for a specific client ID.\n *\n * @param {Object} state    Editor state.\n * @param {string} clientId The ID of the block to get the annotations for.\n *\n * @return {Array} The annotations applicable to this block.\n */\nexport const __experimentalGetAnnotationsForBlock = createSelector(\n\t( state, blockClientId ) => {\n\t\treturn ( state?.[ blockClientId ] ?? [] ).filter( ( annotation ) => {\n\t\t\treturn annotation.selector === 'block';\n\t\t} );\n\t},\n\t( state, blockClientId ) => [ state?.[ blockClientId ] ?? EMPTY_ARRAY ]\n);\n\nexport function __experimentalGetAllAnnotationsForBlock(\n\tstate,\n\tblockClientId\n) {\n\treturn state?.[ blockClientId ] ?? EMPTY_ARRAY;\n}\n\n/**\n * Returns the annotations that apply to the given RichText instance.\n *\n * Both a blockClientId and a richTextIdentifier are required. This is because\n * a block might have multiple `RichText` components. This does mean that every\n * block needs to implement annotations itself.\n *\n * @param {Object} state              Editor state.\n * @param {string} blockClientId      The client ID for the block.\n * @param {string} richTextIdentifier Unique identifier that identifies the given RichText.\n * @return {Array} All the annotations relevant for the `RichText`.\n */\nexport const __experimentalGetAnnotationsForRichText = createSelector(\n\t( state, blockClientId, richTextIdentifier ) => {\n\t\treturn ( state?.[ blockClientId ] ?? [] )\n\t\t\t.filter( ( annotation ) => {\n\t\t\t\treturn (\n\t\t\t\t\tannotation.selector === 'range' &&\n\t\t\t\t\trichTextIdentifier === annotation.richTextIdentifier\n\t\t\t\t);\n\t\t\t} )\n\t\t\t.map( ( annotation ) => {\n\t\t\t\tconst { range, ...other } = annotation;\n\n\t\t\t\treturn {\n\t\t\t\t\t...range,\n\t\t\t\t\t...other,\n\t\t\t\t};\n\t\t\t} );\n\t},\n\t( state, blockClientId ) => [ state?.[ blockClientId ] ?? EMPTY_ARRAY ]\n);\n\n/**\n * Returns all annotations in the editor state.\n *\n * @param {Object} state Editor state.\n * @return {Array} All annotations currently applied.\n */\nexport function __experimentalGetAnnotations( state ) {\n\treturn Object.values( state ).flat();\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","/**\r\n * External dependencies\r\n */\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/**\r\n * @typedef WPAnnotationRange\r\n *\r\n * @property {number} start The offset where the annotation should start.\r\n * @property {number} end   The offset where the annotation should end.\r\n */\r\n\r\n/**\r\n * Adds an annotation to a block.\r\n *\r\n * The `block` attribute refers to a block ID that needs to be annotated.\r\n * `isBlockAnnotation` controls whether or not the annotation is a block\r\n * annotation. The `source` is the source of the annotation, this will be used\r\n * to identity groups of annotations.\r\n *\r\n * The `range` property is only relevant if the selector is 'range'.\r\n *\r\n * @param {Object}            annotation                    The annotation to add.\r\n * @param {string}            annotation.blockClientId      The blockClientId to add the annotation to.\r\n * @param {string}            annotation.richTextIdentifier Identifier for the RichText instance the annotation applies to.\r\n * @param {WPAnnotationRange} annotation.range              The range at which to apply this annotation.\r\n * @param {string}            [annotation.selector=\"range\"] The way to apply this annotation.\r\n * @param {string}            [annotation.source=\"default\"] The source that added the annotation.\r\n * @param {string}            [annotation.id]               The ID the annotation should have. Generates a UUID by default.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalAddAnnotation( {\r\n\tblockClientId,\r\n\trichTextIdentifier = null,\r\n\trange = null,\r\n\tselector = 'range',\r\n\tsource = 'default',\r\n\tid = uuid(),\r\n} ) {\r\n\tconst action = {\r\n\t\ttype: 'ANNOTATION_ADD',\r\n\t\tid,\r\n\t\tblockClientId,\r\n\t\trichTextIdentifier,\r\n\t\tsource,\r\n\t\tselector,\r\n\t};\r\n\r\n\tif ( selector === 'range' ) {\r\n\t\taction.range = range;\r\n\t}\r\n\r\n\treturn action;\r\n}\r\n\r\n/**\r\n * Removes an annotation with a specific ID.\r\n *\r\n * @param {string} annotationId The annotation to remove.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalRemoveAnnotation( annotationId ) {\r\n\treturn {\r\n\t\ttype: 'ANNOTATION_REMOVE',\r\n\t\tannotationId,\r\n\t};\r\n}\r\n\r\n/**\r\n * Updates the range of an annotation.\r\n *\r\n * @param {string} annotationId ID of the annotation to update.\r\n * @param {number} start        The start of the new range.\r\n * @param {number} end          The end of the new range.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalUpdateAnnotationRange(\r\n\tannotationId,\r\n\tstart,\r\n\tend\r\n) {\r\n\treturn {\r\n\t\ttype: 'ANNOTATION_UPDATE_RANGE',\r\n\t\tannotationId,\r\n\t\tstart,\r\n\t\tend,\r\n\t};\r\n}\r\n\r\n/**\r\n * Removes all annotations of a specific source.\r\n *\r\n * @param {string} source The source to remove.\r\n *\r\n * @return {Object} Action object.\r\n */\r\nexport function __experimentalRemoveAnnotationsBySource( source ) {\r\n\treturn {\r\n\t\ttype: 'ANNOTATION_REMOVE_SOURCE',\r\n\t\tsource,\r\n\t};\r\n}\r\n","/**\r\n * WordPress dependencies\r\n */\r\nimport { register, createReduxStore } from '@wordpress/data';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport reducer from './reducer';\r\nimport * as selectors from './selectors';\r\nimport * as actions from './actions';\r\n\r\n/**\r\n * Module Constants\r\n */\r\nimport { STORE_NAME } from './constants';\r\n\r\n/**\r\n * Store definition for the annotations namespace.\r\n *\r\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/data/README.md#createReduxStore\r\n *\r\n * @type {Object}\r\n */\r\nexport const store = createReduxStore( STORE_NAME, {\r\n\treducer,\r\n\tselectors,\r\n\tactions,\r\n} );\r\n\r\nregister( store );\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","window","STORE_NAME","FORMAT_NAME","ANNOTATION_ATTRIBUTE_PREFIX","annotation","name","title","__","tagName","className","attributes","id","edit","__experimentalGetPropsForEditableTreePreparation","select","richTextIdentifier","blockClientId","annotations","__experimentalGetAnnotationsForRichText","__experimentalCreatePrepareEditableTree","formats","text","length","record","forEach","start","end","source","applyFormat","type","applyAnnotations","__experimentalGetPropsForEditableTreeChangeHandler","dispatch","removeAnnotation","__experimentalRemoveAnnotation","updateAnnotationRange","__experimentalUpdateAnnotationRange","__experimentalCreateOnChangeEditableValue","props","positions","characterFormats","i","filter","format","replace","retrieveAnnotationPositions","currentAnnotation","position","updateAnnotationsWithPositions","settings","registerFormatType","filterWithReference","collection","predicate","filteredCollection","addFilter","OriginalComponent","withSelect","clientId","__experimentalGetAnnotationsForBlock","map","concat","Boolean","join","mapValues","callback","entries","reduce","acc","LEAF_KEY","arrayOf","isShallowEqual","a","b","fromIndex","selector","getDependants","rootCache","normalizedGetDependants","clear","WeakMap","callSelector","cache","node","args","dependants","len","arguments","Array","dependant","caches","isUniqueByDependants","has","set","head","createCache","getCache","apply","lastDependants","next","prev","val","EMPTY_ARRAY","createSelector","state","_state$blockClientId","_state$blockClientId2","__experimentalGetAllAnnotationsForBlock","_state$blockClientId3","_state$blockClientId4","range","other","_state$blockClientId5","__experimentalGetAnnotations","values","flat","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","byteToHex","push","toString","substr","arr","offset","undefined","uuid","toLowerCase","test","TypeError","options","buf","rnds","random","__experimentalAddAnnotation","action","annotationId","__experimentalRemoveAnnotationsBySource","store","createReduxStore","reducer","newAnnotation","isValidAnnotationRange","previousAnnotationsForBlock","annotationsForBlock","hasChangedRange","newAnnotations","selectors","actions","register"],"sourceRoot":""}